@using Kendo.Mvc.UI;
@model AsaludEcopetrol.Models.PQRS.GestionPqrs
@{
    ViewBag.Title = "CREAR PQRS";
    Layout = "~/Views/Shared/_LayoutECOPETROL.cshtml";
}

<script src="https://unpkg.com/gijgo@1.9.13/js/gijgo.min.js" type="text/javascript"></script>
<link href="https://unpkg.com/gijgo@1.9.13/css/gijgo.min.css" rel="stylesheet" type="text/css" />

<br>

@using (Html.BeginForm())
{

    <fieldset>
        <div class="container">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <strong class="text-primary_asalud">PQR</strong>
                </div>
                <div class="panel-body">
                    <form id="frm-alumno">
                        <div class="row">
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.numero_caso)</span></h5>
                                @Html.TextBoxFor(p => p.numero_caso, new { @maxlength = "49", @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.numero_caso, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.consecutivo_caso)</span></h5>
                                @Html.TextBoxFor(p => p.consecutivo_caso, new { @maxlength = "49", @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.consecutivo_caso, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_ingreso_salesforce)</span></h5>
                                <input class="datepickerr" title="datepicker" style="width:100%" name="fecha_ingreso_salesforce" id="fecha_ingreso_salesforce" required />
                                @Html.ValidationMessageFor(u => u.fecha_ingreso_salesforce, null, new { @class = "label label-danger" })
                            </div>
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.horasalesforce)</span></h5>
                                <input id="horasalesforce" class="solo-numero" width="150" name="horasalesforce" required />
                                @Html.ValidationMessageFor(u => u.horasalesforce, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_ingreso_buzon_asalud)</span></h5>
                                <input class="datepickerr" title="datepicker" style="width:100%" name="fecha_ingreso_buzon_asalud" id="fecha_ingreso_buzon_asalud" required />
                                @Html.ValidationMessageFor(u => u.fecha_ingreso_buzon_asalud, null, new { @class = "label label-danger" })
                            </div>
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.horabuzon)</span></h5>
                                <input id="horabuzon" width="150" class="solo-numero" name="horabuzon" required />
                                @Html.ValidationMessageFor(u => u.horabuzon, null, new { @class = "label label-danger" })
                            </div>
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_solicitud)</span></h5>
                                @Html.DropDownListFor(model => model.tipo_solicitud, new SelectList(Model.ListTipoSolicitud, "id_ref_pqrs_tipo_solicitud", "descripcion"), "Seleccione...", new { @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.tipo_solicitud, null, new { @class = "label label-danger" })

                            </div>
                            <div class="col-sm-3">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_categorizacion)</span></h5>
                                @Html.DropDownListFor(model => model.tipo_categorizacion, new SelectList(Model.ListTipocatego, "id_ref_categorizacon", "descripcion"), "Seleccione...", new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(u => u.tipo_categorizacion, null, new { @class = "label label-danger" })
                            </div>
                        </div>
                        <br />

                        <div class="row">

                            <div class="col-sm-4">
                                <label class="text-secondary_asalud">Fecha de respuesta programada Salesforce:</label>
                                <input class="datepickerr" title="datepicker" style="width:100%" name="fecha_egreso_salesforce" id="fecha_egreso_salesforce" required />
                                @Html.ValidationMessageFor(u => u.fecha_egreso_salesforce, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-4">
                                <label class="text-secondary_asalud">Regional:</label>

                                @(Html.Kendo().DropDownListFor(m => m.regional)
                                                              .Name("regional")
                                                              .HtmlAttributes(new { style = "width:90%" })
                                                              .OptionLabel("Select Regional...")
                                                              .DataTextField("nombre_regional")
                                                              .DataValueField("id_ref_regional")
                                                              .Filter(FilterType.Contains)
                                                              .Events(events => events.Select("CustomerSelect3"))
                                                               .DataSource(source =>
                                                               {
                                                                   source.Read(read =>
                                                                   {
                                                                       read.Action("GetCascadeRegional", "Facturas");
                                                                   });
                                                               })
                                    )
                                @Html.ValidationMessageFor(u => u.regional, null, new { @class = "label label-danger" })

                                @*<select class="form-control select2" name="regional" id="regional">
                                        <option value="">- Seleccione -</option>
                                        @{ string reg = (string)ViewBag.reg;}
                                        @foreach (ECOPETROL_COMMON.ENTIDADES.Ref_regional item in ViewBag.regional)
                                        {
                                            <option value="@item.id_ref_regional">@item.indice</option>
                                        }
                                    </select>*@
                            </div>
                            <div class="col-sm-4">
                                <label class="text-secondary_asalud">Ciudad o municipio de ocurrencia del caso:</label>
                                <select class="form-control select2" id="ciudad_del_caso" name="ciudad_del_caso" required>
                                    <option value="">- Seleccionar -</option>
                                </select>
                            </div>

                            @*<div class="col-sm-4">
                                        <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.ciudad_del_caso)</span></h5>

                                        @(Html.Kendo().DropDownListFor(m => m.ciudad_del_caso)
                                          .Name("ciudad_del_caso")
                                          .HtmlAttributes(new { style = "width:90%" })
                                                          .OptionLabel("Select Ciudad...")
                                                          .DataTextField("nombre")
                                                          .DataValueField("id_ref_ciudades")
                                                          .Filter(FilterType.Contains)
                                                          .Events(events => events.Select("CustomerSelect4"))
                                                          .DataSource(source =>
                                                          {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("GetCascadeCiudades", "Facturas")
                                                                    .Data("filterProducts");
                                                                })
                                                                .ServerFiltering(true);
                                                            })

                                                          .CascadeFrom("regional")
                                )
                                        <script>
                                            function filterProducts() {
                                                return {
                                                    regional: $("#regional").val()
                                                };

                                            }
                                        </script>

                                        @Html.ValidationMessageFor(u => u.ciudad_del_caso, null, new { @class = "label label-danger" })
                                    </div>*@

                        </div>
                        <br />

                        <div class="row">

                            <div class="col-sm-4">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.solicitante_numero_identi)</span></h5>
                                @Html.TextBoxFor(p => p.solicitante_numero_identi, new { @maxlength = "49", @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.solicitante_numero_identi, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-4">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.solicitante_nombre)</span></h5>
                                @Html.TextBoxFor(p => p.solicitante_nombre, new { @maxlength = "199", @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.solicitante_nombre, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-4">
                                <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.especificacion_solicitud)</span></h5>
                                @Html.TextAreaFor(p => p.especificacion_solicitud, new { @maxlength = "4999", @class = "form-control" })
                                @Html.ValidationMessageFor(u => u.especificacion_solicitud, null, new { @class = "label label-danger" })
                            </div>

                        </div>
                        <br />

                        <div class="row">
                            @*<div class="col-sm-4">
                                    <label class="text-secondary_asalud">Solucionador:</label>
                                    <select class="form-control select2" id="auditor" name="auditor" required>
                                        <option value="">- Seleccionar -</option>
                                    </select>
                                </div>
                                <div class="col-sm-4">
                                    <label class="text-secondary_asalud">Auxiliar solucionador:</label>
                                    <select class="form-control select2" id="auxiliar_solucionador" name="auxiliar_solucionador" required>
                                        <option value="">- Seleccionar -</option>
                                    </select>
                                </div>*@
                            <div class="col-sm-4">
                                <label class="text-secondary_asalud">Solucionador:</label>

                                @(Html.Kendo().DropDownListFor(m => m.solucionador)
                                  .Name("solucionador")
                                  .HtmlAttributes(new { style = "width:90%" })
                                  .OptionLabel("Select solucionador...")
                                  .DataTextField("nombre")
                                  .DataValueField("nombre")
                                  .Filter(FilterType.Contains)
                                  .Events(events => events.Select("CustomerSelect7"))
                                  .Events(e => e.Change("onChange"))
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetCascadeSolucionadorReg", "Pqrs")
                                          .Data("filterProducts2");
                                      })
                                      .ServerFiltering(true);
                                  })

                                  .CascadeFrom("regional")
        )
                                <script>
                                    function filterProducts2() {
                                        return {
                                            regional: $("#regional").val()
                                        };

                                    }
                                </script>
                                @Html.ValidationMessageFor(u => u.ciudad_del_caso, null, new { @class = "label label-danger" })
                            </div>

                            <div class="col-sm-4">
                                <label class="text-secondary_asalud">Auxiliar solucionador:</label>

                                @(Html.Kendo().DropDownListFor(m => m.auxiliar_solucionador)
                                  .Name("auxiliar_solucionador")
                                  .HtmlAttributes(new {style = "width:90%" })
                                  .OptionLabel("Select Auxiliar...")
                                  .DataTextField("nombre")
                                  .DataValueField("nombre")
                                  .Filter(FilterType.Contains)
                                  .Events(events => events.Select("CustomerSelect8"))
                                  .Events(e => e.Change("onChange2"))
                                  .DataSource(source =>
                                  {
                                      source.Read(read =>
                                      {
                                          read.Action("GetCascadeAuxSolucionador", "Pqrs")
                                          .Data("filterProducts3");
                                      })
                                      .ServerFiltering(true);
                                  })

                                  .CascadeFrom("solucionador")
        )
                                <script>
                                    function filterProducts3() {
                                        return {
                                            solucionador: $("#solucionador").val()
                                        };
                                    }
                                </script>
                                @Html.ValidationMessageFor(u => u.auxiliar_solucionador, null, new { @class = "label label-danger" })
                            </div>
                            <div class="col-sm-4">
                                <h5><span class="control-label text-secondary_asalud">Supersalud:</span></h5>
                                <input type="radio" id="superSaludopcion" value="1" name="superSaludopcion" onclick="validacionSiNo(this.value);" required /> SI
                                <input type="radio" id="superSaludopcion" value="0" name="superSaludopcion" onclick="validacionSiNo(this.value);" /> NO
                                <input type="hidden" id="superSalud" name="superSalud" />
                                @*<h5><span class="control-label text-secondary_asalud">@Html.LabelFor(p => p.superSalud)</span></h5>
                                    @Html.RadioButtonFor(model => model.superSalud, "SI")@Html.Label("SI")
                                    @Html.ValidationMessageFor(u => u.superSalud, null, new { @class = "label label-danger" })
                                    &nbsp;
                                    @Html.RadioButtonFor(model => model.superSalud, "NO")@Html.Label("NO")
                                    @Html.ValidationMessageFor(u => u.superSalud, null, new { @class = "label label-danger" })*@
                            </div>
                        </div>
                        <br />

                        <div id="pnlOtroSolucionador" style="display:none;">
                            <div class="row">
                                <div class="col-sm-4">
                                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.otro_solucionador)</span></h5>
                                    @Html.TextBoxFor(p => p.otro_solucionador, new { @maxlength = "99", @class = "form-control" })
                                    @Html.ValidationMessageFor(u => u.otro_solucionador, null, new { @class = "label label-danger" })
                                </div>
                            </div>
                        </div>

                        <div id="pnlOtroAuxSolucionador" style="display:none;">
                            <div class="row">
                                <div class="col-sm-4">
                                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.otro_auxiliar_solucionador)</span></h5>
                                    @Html.TextBoxFor(p => p.otro_auxiliar_solucionador, new { @maxlength = "99", @class = "form-control" })
                                    @Html.ValidationMessageFor(u => u.otro_auxiliar_solucionador, null, new { @class = "label label-danger" })
                                </div>
                            </div>
                        </div>


                        <div id="pnlGuardar" class="General">
                            <table align="center">
                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input id="BtnActualizar" type="submit" value="INGRESAR" class="btn button_Asalud_Guardar" />
                                    </td>
                                </tr>
                                <tr>
                                    <td class="Error">
                                        @Html.ValidationSummary(true, "")
                                    </td>
                                </tr>

                                <tr>
                                    <td style="display:none">

                                        @Html.TextBoxFor(u => u.fecha_ingreso_salesforceOK)
                                        @Html.TextBoxFor(u => u.fecha_ingreso_buzon_asaludOK)
                                        @Html.TextBoxFor(u => u.fecha_asignacionOK)
                                        @Html.TextBoxFor(u => u.auditor)
                                    </td>
                                </tr>

                            </table>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </fieldset>

}

<script src="~/Scripts/validate.js"></script>
<script>



    $(document).ready(function () {


        $('.select2').select2({
            width: '100%'
        });
        $('#datepicker1').attr('disabled', 'disabled');
        $('#datepicker2').attr('disabled', 'disabled');
        $('#datepicker3').attr('disabled', 'disabled');
        $("#regional").change(function () {
            getlistaauditores();
            var regional = $("#regional").val();
            ObtenerCiudades(regional);

        })

        //$("#ciudad_del_caso").change(function () {
        //    getlistaauditores();
        //})

        //$("#auditor").change(function () {
        //    $("#solucionador").val($("#auditor").val());

        //    var solucionador = document.getElementById("auditor").innerText;
        //    var solucionador2 = document.getElementById("auditor").value;

        //    ObtenerAuxSolucionador(solucionador);


        //})

        $(".datepickerr").kendoDatePicker({
            format: "MM/dd/yyyy",
        });
        $(".k-input").attr('readonly', true);

        $('#horasalesforce').timepicker();
        $('#horasalesforce').validate();
        $('#horabuzon').validate();
        $('#horabuzon').timepicker();

        $('.solo-numero').keyup(function () {
            this.value = (this.value + '').replace(/[^0-9.]/g, '');
        });

    });

    function validacionSiNo(valor) {
        $("#superSalud").val(valor);
    }

    function onChange(e) {
        //alert("pasa");

        var dataItem = this.dataItem(e.item);
        var idSolucionador = dataItem.id_solucionador;
        var nombreSolucionador = dataItem.nombre;

        if (idSolucionador == null && nombreSolucionador == 'OTRO') {
            document.getElementById('pnlOtroSolucionador').style.display = 'block';

        } else {
            document.getElementById('pnlOtroSolucionador').style.display = 'none';

            $("#otro_solucionador").val("");
            $("#otro_solucionador_correo").val("");
        }
    }

    function onChange2(e) {

        var dataItem = this.dataItem(e.item);
        var nombreSolucionador = dataItem.nombre;

        if (nombreSolucionador == 'OTRO') {
            document.getElementById('pnlOtroAuxSolucionador').style.display = 'block';

        } else {
            document.getElementById('pnlOtroAuxSolucionador').style.display = 'none';

            $("#otro_auxiliar_solucionador").val("");
            $("#otro_auxiliar_solucionador_correo").val("");
        }
    }


    function change1() {
        var DataItem = (kendo.toString(this.value(), 'd'));

        $('input:text[id$=fecha_ingreso_salesforceOK]').val(DataItem);

    }
    function change2() {
        var DataItem = (kendo.toString(this.value(), 'd'));

        $('input:text[id$=fecha_ingreso_buzon_asaludOK]').val(DataItem);

    }

    function change3() {
        var DataItem = (kendo.toString(this.value(), 'd'));

        $('input:text[id$=fecha_asignacionOK]').val(DataItem);

    }

    function CustomerSelect3(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#regional").val(DataItem.id_ref_regional);
    }

    function CustomerSelect4(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#ciudad_del_caso").val(DataItem.id_ref_ciudades);
    }
    function CustomerSelect5(e)
    {
        var DataItem = this.dataItem(e.item.index());
        $("#cargo").val(DataItem.id_rol_cargo);
    }
    function CustomerSelect7(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#solucionador").val(DataItem.id);
    }

    function CustomerSelect8(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#Auxsolucionador").val(DataItem.id);
    }

    function CustomerSelect6(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#auditor").val(DataItem.id_usuario);
    }


        function getlistaauditores() {

        $.ajax({
            url: "@Url.Action("GetCascadeAuditores")",
            type: "post",
            data: {
                regional: $("#regional").val(),
                ciudad_del_caso: $("#ciudad_del_caso").val()
            },
            success: function (data)
            {
                $("#auditor").empty();
                $("#auditor").append("<option value='0'>Seleccione...</option>");
                data.forEach(function (data)
                {
                    $("#auditor").append("<option value='" + data.id_usuario +"'>"+data.Nombre+"</option>");

                });

                $("#auditor").val('@Model.auditor');
            }

        })
    }

    function ObtenerCiudades(a) {

        $.ajax({
            url: "@Url.Action("ObtenerCiudades", "Pqrs")",
            type: "post",
            data: { regional: a },
            success: function (data) {
                $("#ciudad_del_caso").empty();
                $("#ciudad_del_caso").html(data);
                $("#ciudad_del_caso").val("").trigger("change");

            }
        })
    }

    @*function getlistaauditores() {
         $.ajax({
            url: "@Url.Action("ObtenerSolucionador", "Pqrs")",
            type: "post",
             data: {
                 regional: $("#regional").val(),
                 ciudad_del_caso: $("#ciudad_del_caso").val()
             },
            success: function (data) {
                $("#auditor").empty();
                $("#auditor").html(data);
                $("#auditor").val("").trigger("change");

            }
        })
    }*@

    @*function ObtenerAuxSolucionador(a) {

        $.ajax({
            url: "@Url.Action("ObtenerAuxSolucionador", "Pqrs")",
            type: "post",
            data: { solucionador: a },
            success: function (data) {
                $("#auxiliar_solucionador").empty();
                $("#auxiliar_solucionador").html(data);
                $("#auxiliar_solucionador").val("").trigger("change");

            }
        })
    }*@

</script>


<style>
    .Info {
        color: #800000;
        text-align: justify;
        font-weight: bold;
    }

    .Error {
        color: #800000;
        font-size: small;
        font-weight: bold;
    }

    .Tamaño {
        height: 200px;
    }

    .TamañoImag {
        height: 200px;
        position: center;
    }

    .TamañoDiv {
        position: page;
        /*width:1100px;*/
    }

    .btn-glyphicon {
        padding: 8px;
        background: #ffffff;
        margin-right: 4px;
    }

    .icon-btn {
        padding: 1px 15px 3px 2px;
        border-radius: 50px;
    }

    .mywidth {
        width: 35em;
        font-family: Verdana;
        font-size: 1em;
    }
</style>
