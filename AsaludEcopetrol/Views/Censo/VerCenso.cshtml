@using Kendo.Mvc.UI;
@model  AsaludEcopetrol.Models.Censo.censo
@{
    ViewBag.Title = "CENSO";
    Layout = "~/Views/Shared/_LayoutECOPETROL.cshtml";
}

<br />

<div class="container">
    <div class="panel panel-default">
        <div class="panel-heading">
            <strong class="text-primary_asalud">CENSO</strong>
        </div>
        <div class="panel-body">
            <form id="formulario" action="VerCenso" method="post">

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <h2>  @Html.ValidationSummary(true, "")</h2>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_identifi_afiliado)</span>
                        @Html.DropDownListFor(model => model.tipo_identifi_afiliado, new SelectList(Model.ListTipoDoc, "id_ref_tipo_documental", "descripcion"), "Seleccione...", new { @class = "form-control select2 selectObliga", @readonly = "readonly" })
                        @Html.ValidationMessageFor(u => u.tipo_identifi_afiliado, null, new { @class = "label label-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.num_identifi_afil)</span>
                        @Html.TextBoxFor(p => p.num_identifi_afil, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(u => u.num_identifi_afil, null, new { @class = "label label-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_recepcion_censo)</span>
                        <input type="text" class="datepickerr" value="@Model.fecha_recepcion_censo" style="width: 100%" name="fecha_recepcion_censoOK" id="fecha_recepcion_censoOK" required="required" readonly/>
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.primer_apellido)</span>
                        @Html.TextBoxFor(p => p.primer_apellido, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(u => u.primer_apellido, null, new { @class = "label label-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.segundo_apellido)</span>
                        @Html.TextBoxFor(p => p.segundo_apellido, new { @class = "form-control", @readonly = "readonly" })
                        @*@Html.ValidationMessageFor(u => u.segundo_apellido, null, new { @class = "label label-danger" })*@
                    </div>


                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.primer_nombre)</span>
                        @Html.TextBoxFor(p => p.primer_nombre, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.primer_nombre, "", new { @class = "label label-danger" })

                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.segundo_nombre)</span>
                        @Html.EditorFor(model => model.segundo_nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @*@Html.ValidationMessageFor(model => model.segundo_nombre, "", new { @class = "label label-danger" })*@
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_nacimiento)</span>
                        @(Html.Kendo().DateTimePickerFor(p => p.fecha_nacimiento)
                            .HtmlAttributes(new { style = "width: 70%", title = "Vigencia desde" })
                            .Enable(false)
                            //.Value(DateTime.Now)
                            )
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.genero)</span>
                        <div style="width:100%">
                            @Html.RadioButtonFor(model => model.genero, "M", false)@Html.Label("MASCULINO")
                            &nbsp;
                            @Html.RadioButtonFor(model => model.genero, "F", false)@Html.Label("FEMENINO")
                            @Html.ValidationMessageFor(u => u.genero, null, new { @class = "label label-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.edad)</span>
                        @Html.EditorFor(model => model.edad, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.edad, "", new { @class = "label label-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.dias_estancia)</span>
                        @Html.EditorFor(model => model.dias_estancia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.dias_estancia, "", new { @class = "label label-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_ingreso)</span>
                        @(Html.Kendo().DateTimePickerFor(p => p.fecha_ingreso)
                            .HtmlAttributes(new { style = "width: 100%", title = "Vigencia desde" })
                             //.Value(DateTime.Now)
                             .Enable(false)
                            )
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_ingreso)</span>
                        @Html.DropDownListFor(model => model.tipo_ingreso, new SelectList(Model.ListTipoIngreso, "id_ref_tipo_ingreso", "descripcion"), "Seleccione...", new { @class = "form-control select2 selectObliga" })
                        @Html.ValidationMessageFor(model => model.tipo_ingreso, "", new { @class = "label label-danger" })

                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.origen_evento)</span>
                        @Html.DropDownListFor(model => model.origen_evento, new SelectList(Model.ListOrigenEvento, "id_ref_origen_evento", "descripcion"), "Seleccione...", new { @class = "form-control select2 selectObliga" })
                        @Html.ValidationMessageFor(model => model.origen_evento, "", new { @class = "label label-danger" })

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_habitacion)</span>
                        @Html.DropDownListFor(model => model.tipo_habitacion, new SelectList(Model.ListTipoHabitacion, "id_ref_tipo_habitacion", "descripcion"), "Seleccione...", new { @class = "form-control select2 selectObliga" })
                        @Html.ValidationMessageFor(model => model.tipo_habitacion, "", new { @class = "label label-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.id_medico_auditor)</span>
                        @Html.DropDownListFor(model => model.id_medico_auditor, new SelectList(Model.ListAuditorOK, "id_usuario", "nombre"), "Seleccione...", new { @class = "form-control select2 selectObliga" })
                        @Html.ValidationMessageFor(model => model.id_medico_auditor, "", new { @class = "label label-danger" })
                    </div>

                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">@Html.LabelFor(p => p.ips_primaria)</span>
                        @Html.DropDownListFor(model => model.ips_primaria, new SelectList(Model.ListIPSOK, "id_ref_ips", "Nombre"), "Seleccione...", new { @class = "form-control selectObliga", @readonly = "readonly"})
                        @Html.ValidationMessageFor(model => model.ips_primaria, "", new { @class = "label label-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">Línea de pago</span>
                        @Html.DropDownListFor(model => model.linea_pago, new SelectList(Model.ListLineasPago, "id_linea", "descripcion"), "Seleccione...", new { @class = "form-control selectObliga" })
                        @Html.ValidationMessageFor(model => model.linea_pago, "", new { @class = "label label-danger" })
                    </div>
                    <div class="col-sm-4 form-group">
                        <span class="text-secondary_asalud">Caso especial</span>
                        <div style="width:100%">
                            @Html.RadioButtonFor(model => model.caso_Especial, "1", false)@Html.Label("SI")
                            &nbsp;
                            @Html.RadioButtonFor(model => model.caso_Especial, "0", false)@Html.Label("NO")
                            @Html.ValidationMessageFor(u => u.caso_Especial, null, new { @class = "label label-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4 form-group" id="divCasoEspecial" style="display:none">
                        <span class="text-secondary_asalud">Caso</span>
                        @Html.DropDownListFor(model => model.caso_Especial_detalle, new SelectList(Model.ListCasoEspecial, "id_caso", "descripcion"), "Seleccione...", new { @class = "form-control select2 selectObliga" })
                        @Html.ValidationMessageFor(model => model.caso_Especial_detalle, "", new { @class = "label label-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-8 form-group">
                        <table>
                            <tr>
                                <td>
                                    <span class="text-secondary_asalud">@Html.LabelFor(p => p.dx_actual)</span>
                                    @(Html.Kendo().AutoComplete()
                                        .Name("dx_actual")
                                        .Placeholder("Seleccione...")
                                        .HtmlAttributes(new { style = "width:800px" })
                                        .DataTextField("des")
                                        .Events(events => events.Select("CustomerSelect"))
                                        .Filter(FilterType.Contains)

                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetCie10", "Concurrencia");
                                            });
                                        })
                                    )
                                    @Html.HiddenFor(x => x.dx_actual)



                                </td>
                            </tr>
                        </table>

                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 text-center">
                        @if (Model.condicion_alta == 0)
                        {
                            if (ViewBag.usuario == "14")
                            {

                            }
                            else
                            {
                                <a id="BtnActualizar" onclick="Actualizar()" class="btn button_Asalud_Guardar">ACTUALIZAR</a>
                                <button type="button" class="btn button_Asalud_Rechazar" onclick="window.history.go(-1)">Volver</button>
                            }

                        }
                        else
                        {

                        }
                    </div>
                    <div class="Error">
                        @Html.ValidationSummary(true, "")
                    </div>
                </div>

                <div id="pnlGuardar" class="General">
                    <table align="left">
                        <tr>
                            <td class="Error">
                                @Html.ValidationSummary(true, "")
                            </td>
                        </tr>
                        <tr>
                            <td style="display:none">
                                @Html.TextBoxFor(u => u.id_censo)
                                @Html.TextBoxFor(u => u.tipo_identifi_afiliado)
                                @Html.TextBoxFor(u => u.fecha_recepcion_censoOK)
                                @Html.TextBoxFor(u => u.ips_primaria2)
                                @Html.TextBoxFor(u => u.ips_primaria)
                                @Html.TextBoxFor(u => u.dx_actualok)

                            </td>
                        </tr>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(".datepickerr").kendoDatePicker({
        format: "MM/dd/yyyy",
    });

    $('.select2').select2({
        width: '100%'
    });

    $(".k-input").attr('readonly', true);

    $(document).ready(function () {

        _DiferenciaDias()

        MostrarCaso();

        $('input[name="caso_Especial"]').change(function () {
            var valorSeleccionado = $('input[name="caso_Especial"]:checked').val();
            if (valorSeleccionado === "1") {
                // Si se selecciona "SI", mostrar el campo "caso_especial_detalle"
                $("#divCasoEspecial").show();
            } else {
                // Si se selecciona "NO", ocultar el campo "caso_especial_detalle"
                $("#divCasoEspecial").hide();
            }
        });

        $('input[name="genero"]').addClass('radioObligatorio');
        $('input[name="caso_Especial"]').addClass('radioObligatorio');

    });

    function MostrarCaso() {
        var valorSeleccionado = $('input[name="caso_Especial"]:checked').val();
        if (valorSeleccionado === "1") {

            // Si se selecciona "SI", mostrar el campo "caso_especial_detalle"
            $("#divCasoEspecial").show();
        } else {
            // Si se selecciona "NO", ocultar el campo "caso_especial_detalle"
            $("#divCasoEspecial").hide();
        }
    }

    //function validarCampos() {
    //    var camposSelect = $('select.select2:visible');
    //    var validacionCorrecta = true;

    //    camposSelect.each(function () {
        
    //        if ($(this).prop('selectedIndex') === 0) {
    //            var nombreCampo = $(this).prev('span').text();
    //            alert("Por favor, asegúrate de seleccionar una opción para el campo requerido: " + nombreCampo);
    //            validacionCorrecta = false;
    //            return false;  // Salir del bucle si se encuentra un campo sin selección
    //        }

    //    });


    //    return validacionCorrecta;
    //}

    function validarCampos() {
        var camposSelect = $('select.selectObliga:visible');
        var camposInput = $('.obligatorio').not(':button'); // Todos los campos de entrada excepto los botones
        var camposCheck = $('.radioObligatorio').not(':button'); // 

        var validacionCorrecta = true;

        if (validacionCorrecta) {
            camposCheck.each(function () {

                var groupName = $(this).attr('name');

                if (!$('input[name="' + groupName + '"]:checked').length) {
                    var nombreCampo = $(this)[0].labels[0].innerHTML;
                    alert("Por favor, asegúrate de seleccionar una opción para el campo requerido: " + nombreCampo);
                    validacionCorrecta = false;
                    return false; // Salir del bucle si no hay ninguna opción seleccionada
                }
            });
        }

        if (validacionCorrecta == true) {
            camposInput.each(function () {
                if ($(this).val().trim() === '') {
                    var nombreCampo = $(this).prev('span').text();
                    alert("Por favor, asegúrate de llenar el campo requerido: " + nombreCampo);
                    validacionCorrecta = false;
                    return validacionCorrecta;  // Salir del bucle si se encuentra un campo vacío
                }
            });
        }

        if (validacionCorrecta == true) {
            camposSelect.each(function () {

                if ($(this).prop('selectedIndex') === 0) {
                    var nombreCampo = $(this).prev('span').text();
                    alert("Por favor, asegúrate de seleccionar una opción para el campo requerido: " + nombreCampo);
                    validacionCorrecta = false;
                    return validacionCorrecta;  // Salir del bucle si se encuentra un campo sin selección
                }
            });
        }
        return validacionCorrecta;
    }

    function Actualizar() {
        if (validarCampos()) {
            LoadingShow();
            $("#formulario").submit();
        }
    }

    function checkEgreso() {


        if ($(this).is(':checked')) {

            document.getElementById('BusquedaID').style.display = 'block';

        } else {
            document.getElementById('BusquedaID').style.display = 'none';
        }


    }


    //$("#id_cie10").autocomplete({
    //    source: "/ffmmAuditoria/buscarPrestadorCod",
    //    type: "POST",
    //    dataType: "json",
    //    minLenght: 0,
    //    change: function (evento, ui) {
    //        if (ui.item != null) {
    //            $(this).val(ui.item.Nit);
    //        }
    //    }
    //});

    function mostrar() {
        $('#OpenDilog').hide();
        $('#OpenDilog2').hide();
        document.getElementById('BusquedaID').style.display = 'block';
    };
    function mostrar1() {

        $('#OpenDilog').hide();
        $('#OpenDilog2').hide();

        document.getElementById('BusquedaID').style.display = 'none';
    };


    function _DiferenciaDias() {
        var _DateEnd;
        if (!_DateEnd) {
            var today = new Date();
            var month = today.getMonth() + 1;
            var year = today.getYear();
            var day = today.getDate();
            if (day < 10) day = "0" + day
            if (month < 10) month = "0" + month
            if (year < 1000) year += 1900
            var dias = month + '/' + day + '/' + year;
            _DateEnd = dias;
        }

        var error = 0;
        if ($('#fecha_ingreso').val() == '') {
            error = 1;
        }
    }

    $(document).ready(function () {

        $('#datepicker3').attr('disabled', 'disabled');

    });

    function change3() {
        var DataItem = (kendo.toString(this.value(), 'd'));
        $('input:text[id$=fecha_recepcion_censoOK]').val(DataItem);
    }

    function CustomerSelect(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#dx_actualok").val(DataItem.id_cie10);
    }

</script>

<style>
    .Info {
        color: #800000;
        text-align: justify;
        font-weight: bold;
    }

    .Error {
        color: #800000;
        font-size: small;
        font-weight: bold;
    }

    .Tamaño {
        height: 200px;
    }

    .TamañoImag {
        height: 200px;
        position: center;
    }

    .TamañoDiv {
        position: page;
        /*width:1100px;*/
    }

    .btn-glyphicon {
        padding: 8px;
        background: #ffffff;
        margin-right: 4px;
    }

    .icon-btn {
        padding: 1px 15px 3px 2px;
        border-radius: 50px;
    }
</style>





