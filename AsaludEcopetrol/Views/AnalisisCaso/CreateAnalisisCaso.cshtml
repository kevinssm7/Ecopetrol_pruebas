@using Kendo.Mvc.UI;
@model  AsaludEcopetrol.Models.analisis_de_caso.AnalisisOriginal
@{
    ViewBag.Title = "ANALISIS DE CASOS CENTINELAS / CATASTROFICAS";
    Layout = "~/Views/Shared/_LayoutECOPETROL.cshtml";
}
@{ string alerta = (string)ViewData["alerta"];
}

<br />

@using (Html.BeginForm())
{

    <div class="container">
        @if (!String.IsNullOrEmpty(alerta))
        {
            @Html.Raw(alerta);
        }
        <form id="frm-alumno">


            <div class="row">

                <div class="col-sm-4">
                    <h5> <span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_analisis)</span> </h5>

                    @(Html.Kendo().DateTimePickerFor(p => p.fecha_analisis)
                                                             .Name("datepicker")
                                                            .Format("dd/MM/yyyy")
                                                             .Events(e =>
                                                             {
                                                                 e.Change("change");
                                                             })
                                                            .HtmlAttributes(new { style = "width: 70%", title = "Vigencia desde" })


                    )
                    @Html.ValidationMessageFor(u => u.fecha_analisis, null, new { @class = "label label-danger" })

                </div>

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.solicitud)</span></h5>
                    @Html.TextAreaFor(p => p.solicitud, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.solicitud, null, new { @class = "label label-danger" })

                </div>
                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.tipo_evento)</span></h5>
                    @Html.DropDownListFor(model => model.tipo_evento, new SelectList(Model.LstTipoEvento, "id_ref_eventos_tipo_evento", "descripcion"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.tipo_evento, null, new { @class = "label label-danger" })
                </div>
            </div>


            <div class="row">

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.id_regional)</span></h5>

                    @Html.HiddenFor(x => x.id_regional)
                    @(Html.Kendo().DropDownListFor(m => m.id_regional)
                                                          .Name("regional")
                                                          .HtmlAttributes(new { style = "width:100%" })

                                                          .DataTextField("nombre_regional")
                                                          .DataValueField("id_ref_regional")
                                                          .Filter(FilterType.Contains)
                                                          .Events(events => events.Select("CustomerSelect"))
                                                           .DataSource(source =>
                                                           {
                                                               source.Read(read =>
                                                               {
                                                                   read.Action("GetCascadeRegional", "Facturas");
                                                               });
                                                           })
                    )

                    @Html.ValidationMessageFor(u => u.id_regional)


                </div>
                <div class="col-sm-4">

                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.ciudad)</span></h5>

                    @(Html.Kendo().DropDownListFor(m => m.ciudad)
                                                          .Name("ciudad")
                                                          .HtmlAttributes(new { style = "width:100%" })
                                                          .DataTextField("nombre")
                                                          .DataValueField("id_ref_ciudades")
                                                          .Filter(FilterType.Contains)
                                                          .Events(events => events.Select("CustomerSelect2"))
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("GetCascadeCiudades", "Facturas")
                                                                  .Data("filterProducts");
                                                              })
                                                              .ServerFiltering(true);
                                                          })

                                                          .CascadeFrom("regional")
                    )
                    <script>
                        function filterProducts() {
                            return {
                                regional: $("#regional").val()
                            };

                        }
                    </script>

                </div>

                <div class="col-sm-4">

                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.id_ips)</span></h5>

                    @(Html.Kendo().DropDownListFor(m => m.id_ips)
                                                          .Name("prestador")
                                                          .HtmlAttributes(new { style = "width:100%" })
                                                          .DataTextField("Nombre")
                                                          .DataValueField("id_ref_ips_cuentas")
                                                          .Filter(FilterType.Contains)
                                                          .Events(events => events.Select("CustomerSelect3"))
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("GetCascadeIPS", "Facturas")
                                                                  .Data("filterProducts2");
                                                              })
                                                              .ServerFiltering(true);
                                                          })

                                                          .CascadeFrom("ciudad")
                    )
                    <script>
                        function filterProducts2() {
                            return {
                                Ciudad: $("#ciudad").val()

                            };

                        }
                    </script>
                    @Html.ValidationMessageFor(u => u.id_ips, null, new { @class = "label label-danger" })

                </div>

            </div>
            <div class="row">

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_inicio_evento)</span></h5>
                    @(Html.Kendo().DateTimePickerFor(p => p.fecha_inicio_evento)
                                                     .Name("datepicker2")
                                                    .Format("dd/MM/yyyy")
                                                     .Events(e =>
                                                     {
                                                         e.Change("change2");
                                                     })
                                                    .HtmlAttributes(new { style = "width: 70%", title = "Vigencia desde" })


                    )
                    @Html.ValidationMessageFor(u => u.fecha_inicio_evento, null, new { @class = "label label-danger" })
                </div>
                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.fecha_fin_evento)</span></h5>
                    @(Html.Kendo().DateTimePickerFor(p => p.fecha_fin_evento)
                                                     .Name("datepicker3")
                                                    .Format("dd/MM/yyyy")
                                                     .Events(e =>
                                                     {
                                                         e.Change("change3");
                                                     })
                                                    .HtmlAttributes(new { style = "width: 70%", title = "Vigencia desde" })


                    )
                    @Html.ValidationMessageFor(u => u.fecha_fin_evento, null, new { @class = "label label-danger" })
                </div>
                <div class="col-sm-4">

                </div>

            </div>


            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.prestadores_intervinientes)</span></h5>
                    @Html.TextAreaFor(p => p.prestadores_intervinientes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.prestadores_intervinientes, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.objeto_alcance_actividad)</span></h5>
                    @Html.TextAreaFor(p => p.objeto_alcance_actividad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.objeto_alcance_actividad, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.cie101)</span></h5>
                    @(Html.Kendo().AutoComplete()
                                                                    .Name("dx0")
                                                                    .Placeholder("Seleccione...")
                                                                    .HtmlAttributes(new { style = "width:300px" })
                                                                    .DataTextField("des")
                                                                    .Events(events => events.Select("CustomerSelect4"))
                                                                    .Filter(FilterType.Contains)

                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("GetCie10EgresoPrincipal", "Concurrencia");
                                                                        });

                                                                    })


                    )
                    @Html.HiddenFor(x => x.cie101)
                    @Html.ValidationMessageFor(u => u.cie101, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.cie102)</span></h5>
                    @(Html.Kendo().AutoComplete()
                                                                    .Name("dx2")
                                                                    .Placeholder("Seleccione...")
                                                                    .HtmlAttributes(new { style = "width:300px" })
                                                                    .DataTextField("des")
                                                                    .Events(events => events.Select("CustomerSelect5"))
                                                                    .Filter(FilterType.Contains)

                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("GetCie10EgresoPrincipal", "Concurrencia");
                                                                        });

                                                                    })


                    )
                    @Html.HiddenFor(x => x.cie102)
                    @Html.ValidationMessageFor(u => u.cie102, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-4">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.cie103)</span></h5>
                    @(Html.Kendo().AutoComplete()
                                                                    .Name("dx3")
                                                                    .Placeholder("Seleccione...")
                                                                    .HtmlAttributes(new { style = "width:300px" })
                                                                    .DataTextField("des")
                                                                    .Events(events => events.Select("CustomerSelect6"))
                                                                    .Filter(FilterType.Contains)

                                                                    .DataSource(source =>
                                                                    {
                                                                        source.Read(read =>
                                                                        {
                                                                            read.Action("GetCie10EgresoPrincipal", "Concurrencia");
                                                                        });

                                                                    })


                    )
                    @Html.HiddenFor(x => x.cie103)
                    @Html.ValidationMessageFor(u => u.cie103, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.resumen_secuencial_caso)</span></h5>
                    @Html.TextAreaFor(p => p.resumen_secuencial_caso, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.resumen_secuencial_caso, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.analisis_clinico_caso)</span></h5>
                    @Html.TextAreaFor(p => p.analisis_clinico_caso, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.analisis_clinico_caso, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.aplicacion_metodologia)</span></h5>
                    @Html.TextAreaFor(p => p.aplicacion_metodologia, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.aplicacion_metodologia, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.eventuales_causas)</span></h5>
                    @Html.TextAreaFor(p => p.eventuales_causas, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.eventuales_causas, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.eventuales_fallas_calidad)</span></h5>
                    @Html.TextAreaFor(p => p.eventuales_fallas_calidad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.eventuales_fallas_calidad, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.eventuales_fallas_control)</span></h5>
                    @Html.TextAreaFor(p => p.eventuales_fallas_control, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.eventuales_fallas_control, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.fuentes_info)</span></h5>
                    @Html.TextAreaFor(p => p.fuentes_info, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.fuentes_info, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.conclucion_analisis)</span></h5>
                    @Html.TextAreaFor(p => p.conclucion_analisis, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.conclucion_analisis, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.prevenible_atribuible)</span></h5>
                    @Html.TextAreaFor(p => p.prevenible_atribuible, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.prevenible_atribuible, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.costo_no_calidad)</span></h5>
                    @Html.TextAreaFor(p => p.costo_no_calidad, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.costo_no_calidad, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.patologias_eventos_centinelas)</span></h5>
                    @Html.TextAreaFor(p => p.patologias_eventos_centinelas, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.patologias_eventos_centinelas, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.hallazgos_legal)</span></h5>
                    @Html.TextAreaFor(p => p.hallazgos_legal, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.hallazgos_legal, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.cumplimientos_indicadores)</span></h5>
                    @Html.TextAreaFor(p => p.cumplimientos_indicadores, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.cumplimientos_indicadores, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.evaluacion_impacto)</span></h5>
                    @Html.TextAreaFor(p => p.evaluacion_impacto, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.evaluacion_impacto, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.pertinencia_acciones)</span></h5>
                    @Html.TextAreaFor(p => p.pertinencia_acciones, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.pertinencia_acciones, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.eficacia_acciones)</span></h5>
                    @Html.TextAreaFor(p => p.eficacia_acciones, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.eficacia_acciones, null, new { @class = "label label-danger" })
                </div>


            </div>

            <div class="row">

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.recomendaciones_mejora)</span></h5>
                    @Html.TextAreaFor(p => p.recomendaciones_mejora, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.recomendaciones_mejora, null, new { @class = "label label-danger" })
                </div>

                <div class="col-sm-6">
                    <h5><span class="text-secondary_asalud">@Html.LabelFor(p => p.compromiso_mejora)</span></h5>
                    @Html.TextAreaFor(p => p.compromiso_mejora, new { @class = "form-control" })
                    @Html.ValidationMessageFor(u => u.compromiso_mejora, null, new { @class = "label label-danger" })
                </div>


            </div>




            <div id="pnlGuardar" class="General">
                <table align="left">
                    <tr>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (ViewBag.usuario == "14")
                            {

                            }
                            else
                            {

                                if (Model.opc != 3)
                                {
                                    if (Model.id_analisis_caso_original == 0)
                                    {
                                        <input id="BtnActualizar" type="submit" value="INGRESAR" class="btn btn-success" />
                                    }
                                    else
                                    {
                                        <input id="BtnActualizar" type="submit" value="ACTUALIZAR" class="btn btn-success" />
                                    }
                                }
                                else
                                {
                                    <br />
                                    <a role="button" href="javascript:GestionarEstadoCaso(1, 1, @Model.id_analisis_caso_original, @Model.id_concurrencia)" class="btn btn-success">
                                        APROBAR
                                    </a>
                                    <a role="button" href="javascript:JustificacionRechazo()" class="btn btn-danger">
                                        Rechazar
                                    </a>
                                    <br />
                                }

                            }

                        </td>
                    </tr>
                    <tr>
                        <td class="Error">
                            @Html.ValidationSummary(true, "")
                        </td>
                    </tr>

                    <tr>
                        <td style="display:none">
                            @Html.TextBoxFor(u => u.id_concurrencia)
                            @Html.TextBoxFor(u => u.id_analisis_caso_original)
                            @Html.TextBoxFor(u => u.fecha_analisisOK)
                            @Html.TextBoxFor(u => u.fecha_inicio_eventoOK)
                            @Html.TextBoxFor(u => u.fecha_fin_eventoOK)
                            @Html.TextBoxFor(u => u.id_ips)
                            @Html.TextBoxFor(u => u.opc)

                        </td>
                    </tr>
                </table>

            </div>
        </form>
    </div>


}

<div class="modal fade" id="ModalRechazo" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="titlemodal">Debe justificar el rechazo de este caso</h4>
            </div>
            <div class="modal-body row">
                <div class="col-sm-12">
                    <span class="text-secondary_asalud">Justificación:* </span>
                    <textarea class="form-control" id="txtjustificacion" rows="4" placeholder="- Escribir aqui su observacion frente al analisis -"></textarea>
                    <span class="label label-danger" id="mensajeerror" style="display:none">- ¿por que deseas rechazar este caso? -</span>
                </div>
            </div>
            <div class="modal-footer">
                <a role="button" href="javascript:GestionarEstadoCaso(2, 1, @Model.id_analisis_caso_original, @Model.id_concurrencia)" class="btn btn-primary">
                    Rechazar
                </a>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        $('#datepicker').attr('disabled', 'disabled');
        $('#datepicker2').attr('disabled', 'disabled');
        $('#datepicker3').attr('disabled', 'disabled');

        if (parseInt('@Model.id_analisis_caso_original') != 0) {
            $("#dx0").val("@Model.cie101").trigger('change');
            $("#dx1").val("@Model.cie102").trigger('change');
            $("#dx2").val("@Model.cie103").trigger('change');
        }


        if ('@Model.opc' != '')
        {
            if ('@Model.opc' == 3) {
                $("textarea").attr('disabled', 'true');
                $("input[type='text']").attr('disabled', 'true');
                $(".k-icon .k-i-close").prop('disabled', 'true');
                $("span.k-widget.k-autocomplete.k-header.k-state-default").css('pointer-events', 'none');
                $("span.k-widget.k-dropdown.k-header").css('pointer-events', 'none');
                $("span.k-select").css('pointer-events', 'none');
                $()

            }
        }
    });

    function change() {
        var DataItem = (kendo.toString(this.value(), 's'));

        $('input:text[id$=fecha_analisisOK]').val(DataItem);

    }

    function change2() {
        var DataItem = (kendo.toString(this.value(), 's'));

        $('input:text[id$=fecha_inicio_eventoOK]').val(DataItem);

    }


    function change3() {
        var DataItem = (kendo.toString(this.value(), 's'));

        $('input:text[id$=fecha_fin_eventoOK]').val(DataItem);

    }

    function CustomerSelect(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#id_regional").val(DataItem.id_ref_regional);
    }

    function CustomerSelect2(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#ciudad").val(DataItem.id_ref_ciudades);
    }

    function CustomerSelect3(e)
    {
        var DataItem = this.dataItem(e.item.index());
        $('input:text[id$=id_ips]').val(DataItem.id_ref_ips_cuentas);
        $("#id_ips").val(DataItem.id_ref_ips_cuentas);
    }


    function CustomerSelect4(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#cie101").val(DataItem.id_cie10);
    }

    function CustomerSelect5(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#cie102").val(DataItem.id_cie10);
    }

    function CustomerSelect6(e) {
        var DataItem = this.dataItem(e.item.index());
        $("#cie103").val(DataItem.id_cie10);
    }

    function JustificacionRechazo()
    {
        $("#txtjustificacion").val('');
        $("#txtjustificacion").prop('disabled', false);
        $("#ModalRechazo").modal('show');
    }

     function GestionarEstadoCaso(a, b, c, d)
    {
        var opcionarealizar = a; // decide que opcion se va a realizar
        var tipoanalisis = b;
        var idanalisis = c;
         var idconcurrencia = d;
         var justificacion = $("#txtjustificacion").val();

        var mensaje;
        if (opcionarealizar == 1) {
            mensaje = "¿Seguro que desea aprobar este caso?";
        } else {
            mensaje = "¿Seguro que desea rechazar este caso?";
        }

        var opcion = confirm(mensaje);

        if (opcion == true)
        {

            $.ajax({
                url: "@Url.Action("GestionarEstadoCaso")",
                type: "post",
                data:
                {
                    opcionrealizar: opcionarealizar,
                    idtipoanalisis: tipoanalisis,
                    idanalisiscaso: idanalisis,
                    idconcurrencia: idconcurrencia,
                    justificacion: justificacion
                },
                success: function (data)
                {
                    debugger
                    var url = data.url;
                    if (data.opcionrealizar == 1) {
                        downloadURI(url);
                    }
                    window.location = "@Url.Action("TableroControl", "AnalisisCaso")"
                },
                error: function (data)
                {
                    alert("error al momento de realizar el procedimiento")
                }
            })


        } else
        {

        }

    }


    function downloadURI(uri) {
        var link = document.createElement("a");
        link.download = "ejemplodescarga.pdf";
        link.href = uri;
        link.click();
    }

</script>
<style>
    .k-autocomplete.k-header {
        width: 300px;
    }

    .Acordion {
        width: 820px;
    }

    .AcordionVentana {
        width: 100px;
        height: 100px;
    }

    .Error {
        color: #800000;
        font-size: small;
        font-weight: bold;
    }

    .Info {
        color: #800000;
        font-size: small;
        text-align: justify;
        font-weight: bold;
        width: 700px;
    }

    .Enca {
        width: 700px;
        text-align: center;
        background-color: #284775;
        color: #ffffff;
    }

    .ListCaja {
        width: 50%;
        border-collapse: collapse;
    }

    .th {
        background: #333;
        color: white;
        font-weight: bold;
    }

    .td {
        padding: 6px;
        border: 1px solid #ccc;
        text-align: left;
    }

    .General {
        font-size: x-small;
        font-family: Calibri;
    }

    .TamañoImag {
        height: 200px;
        position: center;
    }

    .TamañoDiv {
        position: page;
        /*width:1100px;*/
    }

    .btn-glyphicon {
        padding: 8px;
        background: #ffffff;
        margin-right: 4px;
    }

    .icon-btn {
        padding: 1px 15px 3px 2px;
        border-radius: 50px;
    }
</style>

